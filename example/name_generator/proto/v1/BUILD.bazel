load("@build_stack_rules_proto//rules:proto_compile.bzl", "proto_compile")
load("@build_stack_rules_proto//rules/ts:ts_proto_library.bzl", "ts_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

package(default_visibility = ["//example:__subpackages__"])

proto_library(
    name = "example_name_generator_proto_v1_proto",
    srcs = [
        "name_generator.proto",
        "name_generator_service.proto",
    ],
    deps = ["//example/common/naming/proto/v1:example_common_naming_proto_v1_proto"],
)

proto_compile(
    name = "example_name_generator_proto_v1_ts_proto_compile",
    options = {"@build_stack_rules_proto//plugin/stephenh/ts-proto:protoc-gen-ts-proto": [
        "emitImportedFiles=false",
        "esModuleInterop=true",
        "nestJs=true",
        "oneof=unions",
        "returnObservable=true",
        "stringEnums=true",
        "useOptionals=true",
    ]},
    outputs = [
        "name_generator.ts",
        "name_generator_service.ts",
    ],
    plugins = ["@build_stack_rules_proto//plugin/stephenh/ts-proto:protoc-gen-ts-proto"],
    proto = "example_name_generator_proto_v1_proto",
)

ts_proto_library(
    name = "example_name_generator_proto_v1_ts_proto",
    srcs = [":example_name_generator_proto_v1_ts_proto_compile"],
    deps = [
        "//example/common/naming/proto/v1:example_common_naming_proto_v1_ts_proto",
        "@npm//@nestjs/microservices",
        "@npm//@types/node",
    ],
)
