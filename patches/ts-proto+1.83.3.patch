diff --git a/node_modules/ts-proto/build/main.js b/node_modules/ts-proto/build/main.js
index 51918b7..8c49eb3 100644
--- a/node_modules/ts-proto/build/main.js
+++ b/node_modules/ts-proto/build/main.js
@@ -31,7 +31,7 @@ function generateFile(ctx, fileDesc) {
     //
     // We'll also assume that the fileDesc.name is already the `company/foo.proto` path, with
     // the package already implicitly in it, so we won't re-append/strip/etc. it out/back in.
-    const moduleName = fileDesc.name.replace('.proto', '.ts');
+    const moduleName = fileDesc.name.replace('.proto', options.outputClientImpl === 'grpc-web' ? '_web.ts' : '.ts');
     const chunks = [];
     // Indicate this file's source protobuf package for reflective use with google.protobuf.Any
     if (options.exportCommonSymbols) {
diff --git a/node_modules/ts-proto/build/types.js b/node_modules/ts-proto/build/types.js
index 41198a8..39429c8 100644
--- a/node_modules/ts-proto/build/types.js
+++ b/node_modules/ts-proto/build/types.js
@@ -280,7 +280,7 @@ function createTypeMap(request, options) {
     const typeMap = new Map();
     for (const file of request.protoFile) {
         // We assume a file.name of google/protobuf/wrappers.proto --> a module path of google/protobuf/wrapper.ts
-        const moduleName = file.name.replace('.proto', '');
+        const moduleName = file.name.replace('.proto', options.outputClientImpl === 'grpc-web' ? '_web' : '');
         // So given a fullName like FooMessage_InnerMessage, proto will see that as package.name.FooMessage.InnerMessage
         function saveMapping(tsFullName, desc, s, protoFullName) {
             // package is optional, but make sure we have a dot-prefixed type name either way
